1.
The Player class handles player movement and actions through its 'move()' and 'doSomething()' methods. From user input the player moves or performs shooting actions. The goodies are 'ExtraLife, RestoreHealth, and Ammo' They become activated when player's avatar  overlaps their location on the game grid. In the 'StudentWorld' class the 'findBlockingActor()' checks if any actor obstructs the player's movement to the target position. When the player interacts with a goodie 'doSomething()' for the goodie class is called such as 'ExtraLife, RestoreHealth, or Ammo' which trigger specific actions when interacted with by the player. It does nothing to the wall. For player, it checks the keypress and either shoots or moves the player if allowed. For the pea, it tries to move the pea if allowed. for Pit, it asks the world if the marble is with it. If it is, the marble disappears. If all the crystals are picked up, exit will show on the map and if the player is at that spot, the world completes the level. If the current tick is on the thiefbot that it can act on, if it is mean, it asks world if it can shoot or pick up or steal. For ThiefBotFactory it asks the world if there are less than 3 thiefbots and it has a 2% chance per tick to spawn a new ThiefBot. After the interaction, the goodie may disappear or provide benefits to the player such as increasing score, health, or ammunition count. 'StudentWorld' has the movements and actions of all the actors, players, and goodies. From the player input to the detection of the colocation of the object, and interaction handling. 

2.
All functions in the spec implemented


3.
I made an alternative design structure
StudentWorld
	Actor
		Player
		Robot
		Rage
		Pea
		Marble
		Pit
		Crystal
		ExtraLife
		RestoreHealth
		Ammo
		ThiefFactory
		RegularThief
		MeanThief
